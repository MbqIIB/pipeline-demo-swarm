
- builder:
    name: 'create-network'
    builders:
      - shell: |
          #!/bin/bash
          set -x
          set -e
          if {target-swarm-master};
            # Point to correct docker endpoint
            eval $(docker-machine env {target-swarm-master});
            echo "using environment: ";
            docker-machine env {target-swarm-master};

            # Use overlay network
            export USE_OVERLAY="--driver overlay"
          else
            unset DOCKER_HOST;
            echo "using local docker socket"
          fi;

          if docker network inspect {env};
          then
            echo "network {env} Found";
          else
            docker network create ${{USE_OVERLAY}} {env};
          fi;

- job-template:
    name: 'create-network-test'
    builders:
      - create-network:
          env: 'test'
          next-job: '{next-job}'
          target-swarm-master: '{target-swarm-master}'


- job-template:
    name: 'create-network-production'
    builders:
      - create-network:
          env: 'production'
          target-swarm-master: '{target-swarm-master}'

- builder:
    name: 'fabio-deploy'
    builders:
      - shell: |
          #!/bin/bash
          set -x
          set -e
          export ENV={env}
          if {target-swarm-master};
            # Point to correct docker endpoint
            eval $(docker-machine env {target-swarm-master});
            echo "using environment: ";
            docker-machine env {target-swarm-master};

            # Use overlay network
            export USE_OVERLAY="--driver overlay"
          else
            unset DOCKER_HOST;
            echo "using local docker socket"
          fi;
          export ENV={env}

          docker run --net={env} -d -p 80:80 -p 9998:9998 -v wouterla/docker-fabio

- job-template:
    name: 'fabio-deploy-test'
    builders:
      - fabio-deploy:
          env: 'test'
          target-swarm-master: '{target-swarm-master}'

- job-template:
    name: 'fabio-deploy-production'
    builders:
      - fabio-deploy:
          env: 'production'
          target-swarm-master: '{target-swarm-master}'

- job-template:
    name: 'start-infra-test'

- job-template:
    name: 'start-infra-production'

- project:
    name: infra-test
    target-swarm-master: 'swarm-master'
    jobs:
      - 'start-infra-test':
          pipeline-stage: 'test'
          next-job: 'create-network-test'
      - 'create-network-test':
          pipeline-stage: 'test'
          next-job: 'fabio-deploy-test'
      - 'fabio-deploy-test':
          pipeline-stage: 'test'
          next-job: 'done'

- project:
    name: infra-production
    target-swarm-master: 'swarm-master'
    jobs:
      - 'start-infra-production':
          pipeline-stage: 'production'
          next-job: 'create-network-production'
      - 'create-network-production':
          pipeline-stage: 'production'
          next-job: 'fabio-deploy-production'
      - 'fabio-deploy-production':
          pipeline-stage: 'production'
          next-job: 'done'
